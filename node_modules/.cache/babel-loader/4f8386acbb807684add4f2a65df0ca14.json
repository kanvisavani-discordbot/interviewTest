{"ast":null,"code":"var _jsxFileName = \"D:\\\\D Drive\\\\Kanvi\\\\bt_interview\\\\src\\\\components\\\\EventHangouts\\\\EventHangouts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventHangouts = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [options, setOptions] = useState([]);\n\n  const chkValue = (userId, eventId, dateId, eventUserId) => {\n    if (eventId == dateId && userId == eventUserId) return true;else return false;\n  };\n\n  const setChk = e => {\n    debugger;\n    const opt = options;\n    let index;\n\n    if (e.target.checked) {\n      opt.push(+e.target.value);\n    } else {\n      index = opt.indexOf(+e.target.value);\n      opt.splice(index, 1);\n    }\n\n    setOptions(opt);\n  };\n\n  const sendData = () => {\n    debugger;\n    var eventDate_id, user_id;\n    var name = document.getElementById(\"myName\").value;\n    fetch(\"http://localhost:4449/setUsers?name=\" + name).then(res => res.json()).then(result => {\n      user_id = result[0];\n    });\n    options.map(chk => {\n      eventDate_id = chk.dateId;\n      var res = fetch(\"http://localhost:4449/setEvents?eventDate_id=\" + eventDate_id + \"&user_id=\" + user_id);\n      console.log(res);\n    });\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:4449/getUsers\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n      fetch(\"http://localhost:4449/getEventDates\").then(res => res.json()).then(result => {\n        setIsLoaded(true);\n        setDates(result);\n        fetch(\"http://localhost:4449/getEvents\").then(res => res.json()).then(result => {\n          setIsLoaded(true);\n          setEvents(result);\n        });\n      });\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the description of the hangout.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"myName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [date.eventDate, \" \", date.eventTime]\n            }, date.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [dates.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                dateId: date.id,\n                onChange: () => this.setChk\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 55\n              }, this)\n            }, date.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this)), \"}\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this), dates.map(date => events.map(event => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: chkValue(item.id, event.eventDate_id, date.id, event.user_id),\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 45\n            }, this)))]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/hangoutList\",\n        onClick: sendData,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(EventHangouts, \"kNwT+69cnMM7KRTcLzZi4GGHSCY=\");\n\n_c = EventHangouts;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventHangouts\");","map":{"version":3,"sources":["D:/D Drive/Kanvi/bt_interview/src/components/EventHangouts/EventHangouts.js"],"names":["React","useState","useEffect","axios","Link","EventHangouts","error","setError","isLoaded","setIsLoaded","items","setItems","dates","setDates","events","setEvents","options","setOptions","chkValue","userId","eventId","dateId","eventUserId","setChk","e","opt","index","target","checked","push","value","indexOf","splice","sendData","eventDate_id","user_id","name","document","getElementById","fetch","then","res","json","result","map","chk","console","log","message","date","eventDate","eventTime","id","item","Name","event"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n export const EventHangouts =()=>{\r\n     const [error, setError] = useState(null);\r\n     const [isLoaded, setIsLoaded] = useState(false);\r\n     const [items, setItems] = useState([]);\r\n     const [dates, setDates] = useState([]);\r\n     const [events, setEvents] = useState([]);\r\n     const [options, setOptions] = useState([]);\r\n\r\n     const chkValue = (userId,eventId,dateId,eventUserId)=>{\r\n         if(eventId == dateId && userId == eventUserId)\r\n             return true\r\n         else\r\n             return false\r\n     }\r\n\r\n     const setChk=(e)=> {\r\n         debugger;\r\n         const opt = options\r\n         let index\r\n\r\n         if (e.target.checked) {\r\n             opt.push(+e.target.value)\r\n         } else {\r\n             index = opt.indexOf(+e.target.value)\r\n             opt.splice(index, 1)\r\n         }\r\n         setOptions(opt);\r\n     }\r\n\r\n     const sendData = ()=>{\r\n         debugger;\r\n         var eventDate_id,user_id;\r\n         var name=document.getElementById(\"myName\").value;\r\n\r\n         fetch(\"http://localhost:4449/setUsers?name=\"+name)\r\n             .then(res => res.json())\r\n             .then(\r\n                 (result) => {\r\n                     user_id=result[0];\r\n                 })\r\n         options.map((chk) => {\r\n             eventDate_id = chk.dateId;\r\n             var res = fetch(\"http://localhost:4449/setEvents?eventDate_id=\" + eventDate_id + \"&user_id=\" + user_id)\r\n             console.log(res);\r\n         })\r\n     }\r\n\r\n     useEffect(() => {\r\n         fetch(\"http://localhost:4449/getUsers\")\r\n             .then(res => res.json())\r\n             .then(\r\n                 (result) => {\r\n                     setIsLoaded(true);\r\n                     setItems(result);\r\n                     fetch(\"http://localhost:4449/getEventDates\")\r\n                         .then(res => res.json())\r\n                         .then(\r\n                             (result) => {\r\n                                 setIsLoaded(true);\r\n                                 setDates(result);\r\n                                 fetch(\"http://localhost:4449/getEvents\")\r\n                                     .then(res => res.json())\r\n                                     .then(\r\n                                         (result) => {\r\n                                             setIsLoaded(true);\r\n                                             setEvents(result);\r\n                                         })\r\n                             })\r\n                 },\r\n                 (error) => {\r\n                     setIsLoaded(true);\r\n                     setError(error);\r\n                 }\r\n             )\r\n     }, [])\r\n          if (error) {\r\n         return <div>Error: {error.message}</div>;\r\n     } else if (!isLoaded) {\r\n         return <div>Loading...</div>;\r\n     } else {\r\n         return (\r\n                <div>\r\n                    <p>This is the description of the hangout.</p>\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" id=\"myName\"/>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            {\r\n                                dates.map(date=> (\r\n                                        <th key={date.id}>{date.eventDate} {date.eventTime}</th>\r\n                                ))}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            {\r\n                                dates.map(date=> (\r\n                                    <td key={date.id}><input type=\"checkbox\" dateId={date.id} onChange={() => this.setChk} /></td>\r\n                                ))}\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            items.map(item=> (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.Name}</td>\r\n                                    {dates.map(date=>(\r\n                                    events.map(event =>(\r\n                                            <td><input type=\"checkbox\" checked={chkValue(item.id,event.eventDate_id,date.id,event.user_id)} disabled={true}/></td>\r\n                                        ))))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <Link to=\"/hangoutList\" onClick={sendData}>Done</Link>\r\n                </div>\r\n            );\r\n        }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}