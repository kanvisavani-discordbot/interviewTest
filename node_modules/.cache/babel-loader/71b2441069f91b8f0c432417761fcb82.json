{"ast":null,"code":"var _jsxFileName = \"D:\\\\D Drive\\\\Kanvi\\\\bt_interview\\\\src\\\\components\\\\EventHangouts\\\\EventHangouts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventHangouts = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [events, setEvents] = useState([]);\n  const opt = [];\n\n  const chkValue = (userId, dateId) => {\n    debugger;\n    events.map(event => {\n      debugger;\n      if (event.eventDate_id == dateId && userId == event.user_id) return true;\n    });\n    return false;\n  };\n\n  const sendData = () => {\n    debugger;\n    var user_id;\n    var name = document.getElementById(\"myName\").value;\n    fetch(\"http://localhost:4449/setUsers?name=\" + name).then(res => res.json()).then(result => {\n      user_id = result[0].id;\n      opt.map(Id => {\n        var res = fetch(\"http://localhost:4449/setEvents?eventDate_id=\" + Id + \"&user_id=\" + user_id);\n        console.log(res);\n      });\n    });\n  };\n\n  function setChk(event, Id) {\n    debugger;\n    let index;\n\n    if (event.target.checked) {\n      opt.push(Id);\n    } else {\n      index = opt.indexOf(Id);\n      opt.splice(index, 1);\n    }\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:4449/getUsers\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n      fetch(\"http://localhost:4449/getEventDates\").then(res => res.json()).then(result => {\n        setIsLoaded(true);\n        setDates(result);\n        fetch(\"http://localhost:4449/getEvents\").then(res => res.json()).then(result => {\n          setIsLoaded(true);\n          setEvents(result);\n        });\n      });\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the description of the hangout.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"myName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [date.eventDate, \" \", date.eventTime]\n            }, date.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => {\n                  setChk(e, date.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 55\n              }, this)\n            }, date.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: chkValue(item.id, date.id),\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 63\n              }, this)\n            }, date.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 45\n            }, this))]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/hangoutList\",\n        onClick: sendData,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(EventHangouts, \"NrRCQXktghXiE52ollFgGH1j1WQ=\");\n\n_c = EventHangouts;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventHangouts\");","map":{"version":3,"sources":["D:/D Drive/Kanvi/bt_interview/src/components/EventHangouts/EventHangouts.js"],"names":["React","useState","useEffect","axios","Link","EventHangouts","error","setError","isLoaded","setIsLoaded","items","setItems","dates","setDates","events","setEvents","opt","chkValue","userId","dateId","map","event","eventDate_id","user_id","sendData","name","document","getElementById","value","fetch","then","res","json","result","id","Id","console","log","setChk","index","target","checked","push","indexOf","splice","message","date","eventDate","eventTime","e","item","Name"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n export const EventHangouts =()=>{\r\n     const [error, setError] = useState(null);\r\n     const [isLoaded, setIsLoaded] = useState(false);\r\n     const [items, setItems] = useState([]);\r\n     const [dates, setDates] = useState([]);\r\n     const [events, setEvents] = useState([]);\r\n     const opt =[];\r\n\r\n     const chkValue = (userId,dateId)=>{\r\n         debugger;\r\n         events.map(event => {\r\n             debugger;\r\n             if (event.eventDate_id == dateId && userId == event.user_id)\r\n                 return true\r\n         })\r\n             return false\r\n     }\r\n\r\n     const sendData = ()=>{\r\n         debugger;\r\n         var user_id;\r\n         var name=document.getElementById(\"myName\").value;\r\n\r\n         fetch(\"http://localhost:4449/setUsers?name=\"+name)\r\n             .then(res => res.json())\r\n             .then(\r\n                 (result) => {\r\n                     user_id=result[0].id;\r\n                     opt.map((Id) => {\r\n                         var res = fetch(\"http://localhost:4449/setEvents?eventDate_id=\" + Id + \"&user_id=\" + user_id)\r\n                         console.log(res);\r\n                     })\r\n                 })\r\n     }\r\n\r\n     function setChk(event,Id) {\r\n         debugger;\r\n         let index\r\n\r\n         if (event.target.checked) {\r\n             opt.push(Id)\r\n         } else {\r\n             index = opt.indexOf(Id)\r\n             opt.splice(index, 1)\r\n         }\r\n     }\r\n\r\n     useEffect(() => {\r\n         fetch(\"http://localhost:4449/getUsers\")\r\n             .then(res => res.json())\r\n             .then(\r\n                 (result) => {\r\n                     setIsLoaded(true);\r\n                     setItems(result);\r\n                     fetch(\"http://localhost:4449/getEventDates\")\r\n                         .then(res => res.json())\r\n                         .then(\r\n                             (result) => {\r\n                                 setIsLoaded(true);\r\n                                 setDates(result);\r\n                                 fetch(\"http://localhost:4449/getEvents\")\r\n                                     .then(res => res.json())\r\n                                     .then(\r\n                                         (result) => {\r\n                                             setIsLoaded(true);\r\n                                             setEvents(result);\r\n                                         })\r\n                             })\r\n                 },\r\n                 (error) => {\r\n                     setIsLoaded(true);\r\n                     setError(error);\r\n                 }\r\n             )\r\n     }, [])\r\n          if (error) {\r\n         return <div>Error: {error.message}</div>;\r\n     } else if (!isLoaded) {\r\n         return <div>Loading...</div>;\r\n     } else {\r\n         return (\r\n                <div>\r\n                    <p>This is the description of the hangout.</p>\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" id=\"myName\"/>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            {\r\n                                dates.map(date=> (\r\n                                        <th key={date.id}>{date.eventDate} {date.eventTime}</th>\r\n                                ))}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td></td>\r\n                            {\r\n                                dates.map(date=> (\r\n                                    <td key={date.id}><input type=\"checkbox\" onChange={(e)=>{\r\n                                        setChk(e,date.id)\r\n                                    }} /></td>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            items.map(item=> (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.Name}</td>\r\n                                    {dates.map(date=>(\r\n                                            <td key={date.id}><input type=\"checkbox\" checked={\r\n                                                chkValue(item.id,date.id)\r\n                                            } disabled={true}/></td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <Link to=\"/hangoutList\" onClick={sendData}>Done</Link>\r\n                </div>\r\n            );\r\n        }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}