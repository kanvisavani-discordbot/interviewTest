{"ast":null,"code":"var _jsxFileName = \"D:\\\\D Drive\\\\Kanvi\\\\bt_interview\\\\src\\\\components\\\\HangoutList\\\\HangoutList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HangoutList = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [events, setEvents] = useState([]);\n  const opt = [];\n\n  const chkValue = (userId, dateId) => {\n    console.log(events);\n    var setChk = false;\n    events.map(event => {\n      if (event.eventDate_id === dateId && userId === event.user_id) {\n        setChk = true;\n      }\n    });\n    return setChk;\n  };\n\n  const sendData = () => {\n    debugger;\n    var user_id;\n    var name = document.getElementById(\"myName\").value;\n    fetch(\"http://localhost:4449/setUsers?name=\" + name).then(res => res.json()).then(result => {\n      user_id = result[0].id;\n      opt.map(Id => {\n        var res = fetch(\"http://localhost:4449/setEvents?eventDate_id=\" + Id + \"&user_id=\" + user_id);\n        console.log(res);\n      });\n    });\n  };\n\n  function setChk(event, Id) {\n    debugger;\n    let index;\n\n    if (event.target.checked) {\n      opt.push(Id);\n    } else {\n      index = opt.indexOf(Id);\n      opt.splice(index, 1);\n    }\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:4449/getUsers\").then(res => res.json()).then(result => {\n      setIsLoaded(false);\n      setItems(result);\n      fetch(\"http://localhost:4449/getEventDates\").then(res => res.json()).then(result => {\n        setIsLoaded(false);\n        setDates(result);\n        fetch(\"http://localhost:4449/getEvents\").then(res => res.json()).then(result => {\n          debugger;\n          setEvents(result);\n          setIsLoaded(true);\n        });\n      });\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  } else {\n    debugger;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the description of the hangout.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [date.eventDate, \" \", date.eventTime]\n            }, date.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: chkValue(item.id, date.id),\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 55\n              }, this)\n            }, date.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this))]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select the date for hangouts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/hangoutList\",\n        onClick: sendData,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(HangoutList, \"NrRCQXktghXiE52ollFgGH1j1WQ=\");\n\n_c = HangoutList;\n\nvar _c;\n\n$RefreshReg$(_c, \"HangoutList\");","map":{"version":3,"sources":["D:/D Drive/Kanvi/bt_interview/src/components/HangoutList/HangoutList.js"],"names":["React","useState","useEffect","axios","Link","HangoutList","error","setError","isLoaded","setIsLoaded","items","setItems","dates","setDates","events","setEvents","opt","chkValue","userId","dateId","console","log","setChk","map","event","eventDate_id","user_id","sendData","name","document","getElementById","value","fetch","then","res","json","result","id","Id","index","target","checked","push","indexOf","splice","message","date","eventDate","eventTime","item","Name"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const HangoutList =()=>{\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [events, setEvents] = useState([]);\r\n    const opt =[];\r\n\r\n    const chkValue = (userId,dateId)=>{\r\n        console.log(events);\r\n        var setChk=false;\r\n        events.map(event => {\r\n            if (event.eventDate_id === dateId && userId === event.user_id){\r\n                setChk= true;\r\n            }\r\n\r\n        })\r\n        return setChk;\r\n    }\r\n\r\n    const sendData = ()=>{\r\n        debugger;\r\n        var user_id;\r\n        var name=document.getElementById(\"myName\").value;\r\n\r\n        fetch(\"http://localhost:4449/setUsers?name=\"+name)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    user_id=result[0].id;\r\n                    opt.map((Id) => {\r\n                        var res = fetch(\"http://localhost:4449/setEvents?eventDate_id=\" + Id + \"&user_id=\" + user_id)\r\n                        console.log(res);\r\n                    })\r\n                })\r\n    }\r\n\r\n    function setChk(event,Id) {\r\n        debugger;\r\n        let index\r\n\r\n        if (event.target.checked) {\r\n            opt.push(Id)\r\n        } else {\r\n            index = opt.indexOf(Id)\r\n            opt.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:4449/getUsers\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(false);\r\n                    setItems(result);\r\n                    fetch(\"http://localhost:4449/getEventDates\")\r\n                        .then(res => res.json())\r\n                        .then(\r\n                            (result) => {\r\n                                setIsLoaded(false);\r\n                                setDates(result);\r\n                                fetch(\"http://localhost:4449/getEvents\")\r\n                                    .then(res => res.json())\r\n                                    .then(\r\n                                        (result) => {\r\n                                            debugger;\r\n                                            setEvents(result);\r\n                                            setIsLoaded(true);\r\n                                        })\r\n                            })\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        debugger;\r\n        return (\r\n            <div>\r\n                <p>This is the description of the hangout.</p>\r\n\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        {\r\n                            dates.map(date=> (\r\n                                <th key={date.id}>{date.eventDate} {date.eventTime}</th>\r\n                            ))}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        items.map(item=> (\r\n                            <tr key={item.id}>\r\n                                <td>{item.Name}</td>\r\n                                {dates.map(date=>(\r\n                                    <td key={date.id}><input type=\"checkbox\" checked={\r\n                                        chkValue(item.id,date.id)\r\n                                    } disabled={true}/></td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <p>Select the date for hangouts:</p>\r\n                <select></select>\r\n                <Link to=\"/hangoutList\" onClick={sendData}>Done</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}